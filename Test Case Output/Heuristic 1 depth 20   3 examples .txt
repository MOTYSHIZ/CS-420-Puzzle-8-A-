"C:\Program Files\Java\jdk1.8.0_102\bin\java" -Didea.launcher.port=7536 "-Didea.launcher.bin.path=F:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 2016.2.4\bin" -Dfile.encoding=UTF-8 -classpath "C:\Program Files\Java\jdk1.8.0_102\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\rt.jar;F:\Programming\CS-420-Puzzle-8-A-\out\production\CS420p1;F:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 2016.2.4\lib\idea_rt.jar" com.intellij.rt.execution.application.AppMain puzzle8
What would you like to do?
1) Randomly generated puzzle.
2) Input puzzle.
3) Randomly generate 101 puzzles.
4) Read 200 predefined test cases.
2
Please input your puzzle as a 9-character string where each character is a number between 0-8, and there are no repeated characters.
For example: "012345678"
530412867
Which heuristic would you lke to use?
1) The number of misplaced tiles.
2) The sum of distances of the tiles from their goal positions.
1
Using heuristic one.

Generated Puzzle: 
5 3 0 
4 1 2 
8 6 7 
Solving puzzle: 
Move #1:
5 3 0 
4 1 2 
8 6 7 
Move #2:
5 3 2 
4 1 0 
8 6 7 
Move #3:
5 3 2 
4 1 7 
8 6 0 
Move #4:
5 3 2 
4 1 7 
8 0 6 
Move #5:
5 3 2 
4 1 7 
0 8 6 
Move #6:
5 3 2 
0 1 7 
4 8 6 
Move #7:
0 3 2 
5 1 7 
4 8 6 
Move #8:
3 0 2 
5 1 7 
4 8 6 
Move #9:
3 1 2 
5 0 7 
4 8 6 
Move #10:
3 1 2 
5 8 7 
4 0 6 
Move #11:
3 1 2 
5 8 7 
4 6 0 
Move #12:
3 1 2 
5 8 0 
4 6 7 
Move #13:
3 1 2 
5 0 8 
4 6 7 
Move #14:
3 1 2 
0 5 8 
4 6 7 
Move #15:
3 1 2 
4 5 8 
0 6 7 
Move #16:
3 1 2 
4 5 8 
6 0 7 
Move #17:
3 1 2 
4 5 8 
6 7 0 
Move #18:
3 1 2 
4 5 0 
6 7 8 
Move #19:
3 1 2 
4 0 5 
6 7 8 
Move #20:
3 1 2 
0 4 5 
6 7 8 
Move #21:
0 1 2 
3 4 5 
6 7 8 
Search Cost: 11598
Solution Depth: 20

Process finished with exit code 0

"C:\Program Files\Java\jdk1.8.0_102\bin\java" -Didea.launcher.port=7538 "-Didea.launcher.bin.path=F:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 2016.2.4\bin" -Dfile.encoding=UTF-8 -classpath "C:\Program Files\Java\jdk1.8.0_102\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\rt.jar;F:\Programming\CS-420-Puzzle-8-A-\out\production\CS420p1;F:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 2016.2.4\lib\idea_rt.jar" com.intellij.rt.execution.application.AppMain puzzle8
What would you like to do?
1) Randomly generated puzzle.
2) Input puzzle.
3) Randomly generate 101 puzzles.
4) Read 200 predefined test cases.
2
Please input your puzzle as a 9-character string where each character is a number between 0-8, and there are no repeated characters.
For example: "012345678"
458607213
Which heuristic would you lke to use?
1) The number of misplaced tiles.
2) The sum of distances of the tiles from their goal positions.
1
Using heuristic one.

Generated Puzzle: 
4 5 8 
6 0 7 
2 1 3 
Solving puzzle: 
Move #1:
4 5 8 
6 0 7 
2 1 3 
Move #2:
4 5 8 
6 1 7 
2 0 3 
Move #3:
4 5 8 
6 1 7 
0 2 3 
Move #4:
4 5 8 
0 1 7 
6 2 3 
Move #5:
4 5 8 
1 0 7 
6 2 3 
Move #6:
4 5 8 
1 2 7 
6 0 3 
Move #7:
4 5 8 
1 2 7 
6 3 0 
Move #8:
4 5 8 
1 2 0 
6 3 7 
Move #9:
4 5 0 
1 2 8 
6 3 7 
Move #10:
4 0 5 
1 2 8 
6 3 7 
Move #11:
4 2 5 
1 0 8 
6 3 7 
Move #12:
4 2 5 
1 3 8 
6 0 7 
Move #13:
4 2 5 
1 3 8 
6 7 0 
Move #14:
4 2 5 
1 3 0 
6 7 8 
Move #15:
4 2 0 
1 3 5 
6 7 8 
Move #16:
4 0 2 
1 3 5 
6 7 8 
Move #17:
0 4 2 
1 3 5 
6 7 8 
Move #18:
1 4 2 
0 3 5 
6 7 8 
Move #19:
1 4 2 
3 0 5 
6 7 8 
Move #20:
1 0 2 
3 4 5 
6 7 8 
Move #21:
0 1 2 
3 4 5 
6 7 8 
Search Cost: 15085
Solution Depth: 20

Process finished with exit code 0


"C:\Program Files\Java\jdk1.8.0_102\bin\java" -Didea.launcher.port=7539 "-Didea.launcher.bin.path=F:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 2016.2.4\bin" -Dfile.encoding=UTF-8 -classpath "C:\Program Files\Java\jdk1.8.0_102\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\rt.jar;F:\Programming\CS-420-Puzzle-8-A-\out\production\CS420p1;F:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 2016.2.4\lib\idea_rt.jar" com.intellij.rt.execution.application.AppMain puzzle8
What would you like to do?
1) Randomly generated puzzle.
2) Input puzzle.
3) Randomly generate 101 puzzles.
4) Read 200 predefined test cases.
2
Please input your puzzle as a 9-character string where each character is a number between 0-8, and there are no repeated characters.
For example: "012345678"
674301852
Which heuristic would you lke to use?
1) The number of misplaced tiles.
2) The sum of distances of the tiles from their goal positions.
1
Using heuristic one.

Generated Puzzle: 
6 7 4 
3 0 1 
8 5 2 
Solving puzzle: 
Move #1:
6 7 4 
3 0 1 
8 5 2 
Move #2:
6 0 4 
3 7 1 
8 5 2 
Move #3:
0 6 4 
3 7 1 
8 5 2 
Move #4:
3 6 4 
0 7 1 
8 5 2 
Move #5:
3 6 4 
7 0 1 
8 5 2 
Move #6:
3 0 4 
7 6 1 
8 5 2 
Move #7:
3 4 0 
7 6 1 
8 5 2 
Move #8:
3 4 1 
7 6 0 
8 5 2 
Move #9:
3 4 1 
7 6 2 
8 5 0 
Move #10:
3 4 1 
7 6 2 
8 0 5 
Move #11:
3 4 1 
7 6 2 
0 8 5 
Move #12:
3 4 1 
0 6 2 
7 8 5 
Move #13:
3 4 1 
6 0 2 
7 8 5 
Move #14:
3 0 1 
6 4 2 
7 8 5 
Move #15:
3 1 0 
6 4 2 
7 8 5 
Move #16:
3 1 2 
6 4 0 
7 8 5 
Move #17:
3 1 2 
6 4 5 
7 8 0 
Move #18:
3 1 2 
6 4 5 
7 0 8 
Move #19:
3 1 2 
6 4 5 
0 7 8 
Move #20:
3 1 2 
0 4 5 
6 7 8 
Move #21:
0 1 2 
3 4 5 
6 7 8 
Search Cost: 15883
Solution Depth: 20

Process finished with exit code 0

